{"version":3,"sources":["state/action-types/index.ts","state/action-creators/index.ts","state/reducers/bankReducer.ts","state/reducers/historyReducer.ts","state/reducers/index.ts","state/store.ts","components/App.styles.ts","components/Input/Input.styles.ts","components/Button/Button.styles.ts","components/ActionSection/ActionSection.styles.ts","components/ActionSection/ActionSection.tsx","components/History/HistoryList.styles.tsx","components/History/HistoryList.tsx","App.tsx","index.tsx"],"names":["ActionType","depositMoney","amount","dispatch","type","DEPOSIT","payload","withdrawMoney","WITHDRAW","bankruptMoney","BANKRUPT","addToHistory","newHistory","REGISTER_TRANSACTION","bankReducer","state","action","historyReducer","newState","DELETE_TRANSACTION","filter","historyItem","id","reducers","combineReducers","bank","history","store","createStore","applyMiddleware","thunk","StyledWrapper","styled","div","StyledSectionWrapper","StyledInput","span","StyledButton","button","StyledButtonRed","StyledButtonSection","ActionSection","props","disabled","bankInput","onClick","handleDeposit","handleWithdraw","setErrors","StyledHistoryList","HistoryList","useSelector","length","map","item","name","amouth","date","accountBalance","GlobalStyle","createGlobalStyle","App","useDispatch","useState","setBankInput","personName","setPersonName","errors","bindActionCreators","actionCreators","addError","err","console","log","includes","checkForm","errCount","getDate","today","Date","getMonth","getFullYear","getHours","getMinutes","getSeconds","handleAddHistory","historyAction","isDeposit","className","Math","floor","random","value","onChange","e","Number","target","min","placeholder","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d24e1f3e.chunk.js","sourcesContent":["export enum ActionType {\r\n  DEPOSIT = \"deposit\",\r\n  WITHDRAW = \"withdraw\",\r\n  BANKRUPT = \"bankrupt\",\r\n  REGISTER_TRANSACTION = \"register-in-history\",\r\n  DELETE_TRANSACTION = \"delete-from-history\",\r\n}\r\n","import { ActionType } from \"../action-types\";\r\nimport { Dispatch } from \"redux\";\r\nimport { Action } from \"../actions\";\r\nimport { historyItemType } from \"../reducers/historyReducer\";\r\n\r\nexport const depositMoney = (amount: number) => {\r\n  return (dispatch: Dispatch<Action>) => {\r\n    dispatch({\r\n      type: ActionType.DEPOSIT,\r\n      payload: amount,\r\n    });\r\n  };\r\n};\r\n\r\nexport const withdrawMoney = (amount: number) => {\r\n  return (dispatch: Dispatch<Action>) => {\r\n    dispatch({\r\n      type: ActionType.WITHDRAW,\r\n      payload: amount,\r\n    });\r\n  };\r\n};\r\n\r\nexport const bankruptMoney = () => {\r\n  return (dispatch: Dispatch<Action>) => {\r\n    dispatch({\r\n      type: ActionType.BANKRUPT,\r\n    });\r\n  };\r\n};\r\n\r\n// history\r\nexport const addToHistory = (newHistory: historyItemType) => {\r\n  return (dispatch: Dispatch<Action>) => {\r\n    dispatch({\r\n      type: ActionType.REGISTER_TRANSACTION,\r\n      payload: newHistory,\r\n    });\r\n  };\r\n};\r\n\r\n","import { ActionType } from \"../action-types\";\r\nimport { Action } from \"../actions\";\r\n\r\nconst initialBankState = 0;\r\n\r\nexport const bankReducer = (state: number = initialBankState, action: Action) => {\r\n  switch (action.type) {\r\n    case ActionType.DEPOSIT:\r\n      return state + action.payload;\r\n    case ActionType.WITHDRAW:\r\n      return state - action.payload;\r\n    case ActionType.BANKRUPT:\r\n      return 0;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n\r\nexport default bankReducer\r\n\r\n\r\n","import { ActionType } from \"../action-types\";\r\nimport { Action } from \"../actions\";\r\n\r\nexport type historyItemType = {\r\n  id: string;\r\n  type: string;\r\n  name: string;\r\n  amouth: number;\r\n  accountBalance: number;\r\n  date: string;\r\n};\r\n\r\nconst historyReducer = (state: historyItemType[] = [], action: Action) => {\r\n  switch (action.type) {\r\n    case ActionType.REGISTER_TRANSACTION:\r\n      const newState = [...state, action.payload];\r\n      return newState;\r\n    case ActionType.DELETE_TRANSACTION:\r\n      return state.filter(\r\n        (historyItem: historyItemType) => historyItem.id !== action.payload\r\n      );\r\n    case ActionType.BANKRUPT:\r\n      return []\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default historyReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport bankReducer from \"./bankReducer\";\r\nimport historyReducer from \"./historyReducer\";\r\n\r\nconst reducers = combineReducers({\r\n  bank: bankReducer,\r\n  history: historyReducer,\r\n});\r\n\r\nexport default reducers;\r\n\r\nexport type State = ReturnType<typeof reducers>;\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport reducers from \"./reducers/index\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n// export const store = createStore(reducers, {});\r\nexport const store = createStore(reducers, {}, applyMiddleware(thunk));\r\n","import styled from \"styled-components\";\r\n\r\n\r\nexport const StyledWrapper = styled.div`\r\nbox-sizing: border-box;\r\nmin-height: 100vh;\r\ndisplay: grid;\r\nmax-width: 1200px;\r\nmargin: auto;\r\ngrid-template-columns: 60% 40%;\r\n\r\n\r\n@media (max-width: 768px) {\r\n    grid-template-columns: 100%;\r\n  }\r\n`\r\n\r\nexport const StyledSectionWrapper = styled.div`\r\nbox-sizing: border-box;\r\nwidth: 100%;\r\npadding: 3em;\r\nmin-height: 45vh;\r\n@media (max-width: 500px) {\r\n    padding: 0;\r\n  }\r\n`","import styled from \"styled-components\";\r\n\r\nexport const StyledInput = styled.span`\r\n  /* padding: 1rem;\r\nbackground-color: transparent;\r\nborder-radius: 1rem;\r\nborder: 2px solid black;\r\ntransform: 0.2s ease all;\r\n\r\n&:hover {\r\n  border: 2px solid gray;\r\n} */\r\n\r\n  margin: 1rem 0.2rem;\r\n  position: relative;\r\n\r\n  font-size: 1.5rem;\r\n\r\n  background: linear-gradient(21deg, #10abff, #1beabd);\r\n\r\n  padding: 3px;\r\n\r\n  display: inline-block;\r\n\r\n  border-radius: 9999em;\r\n\r\n\r\n  *:not(span) {\r\n    position: relative;\r\n    display: inherit;\r\n    border-radius: inherit;\r\n    margin: 0;\r\n    border: none;\r\n    outline: none;\r\n    padding: 0 0.625em;\r\n    z-index: 1;\r\n    font-size: 1.5rem;\r\n    font-family: inherit;\r\n    line-height: inherit;\r\n    color: #2e3750;\r\n    width: 14em;\r\n\r\n    &:focus + span {\r\n      opacity: 1;\r\n      transform: scale(1);\r\n    }\r\n  }\r\n\r\n  span {\r\n    transform: scale(0.993, 0.94);\r\n    transition: transform 0.5s, opacity 0.25s;\r\n    opacity: 0;\r\n\r\n    position: absolute;\r\n    z-index: 0;\r\n    margin: 4px;\r\n    left: 0;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    border-radius: inherit;\r\n    pointer-events: none;\r\n\r\n    box-shadow: inset 0 0 0 3px #fff, 0 0 0 4px #fff, 3px -3px 30px #1beabd,\r\n      -3px 3px 30px #10abff;\r\n  }\r\n\r\n  @media (max-width: 400px) {\r\n    *:not(span) {\r\n      width: 8em;\r\n    }\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\ntype Props = {\r\n  variant?: string;\r\n};\r\n\r\nexport const StyledButton = styled.button<Props>`\r\n  box-sizing: border-box;\r\n  background: #10abff;\r\n  border: none;\r\n  z-index: 1;\r\n  margin: 1rem 0;\r\n\r\n  width: 130px;\r\n  height: 40px;\r\n  color: #fff;\r\n  border-radius: 5px;\r\n  padding: 10px 25px;\r\n  font-family: \"Lato\", sans-serif;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  position: relative;\r\n  display: inline-block;\r\n  box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\r\n    7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\r\n  outline: none;\r\n\r\n  &:after {\r\n    position: absolute;\r\n    content: \"\";\r\n    width: 0;\r\n    height: 100%;\r\n    top: 0;\r\n    right: 0;\r\n    z-index: -1;\r\n    background-color: white;\r\n    border-radius: 5px;\r\n    box-shadow: inset 2px 2px 2px 0px rgba(255, 255, 255, 0.5),\r\n      7px 7px 20px 0px rgba(0, 0, 0, 0.1), 4px 4px 5px 0px rgba(0, 0, 0, 0.1);\r\n    transition: all 0.3s ease;\r\n  }\r\n\r\n  &:hover {\r\n    color: #10abff;\r\n  }\r\n\r\n  &:hover:after {\r\n    left: 0;\r\n    width: 100%;\r\n  }\r\n  &:active {\r\n    top: 2px;\r\n  }\r\n`;\r\n\r\nexport const StyledButtonRed = styled(StyledButton)`\r\n  background: red;\r\n  &:after {\r\n    background-color: white;\r\n  }\r\n  &:hover {\r\n    color: red;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledButtonSection = styled.div`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  justify-content: space-around;\r\n  flex-direction: row;\r\n  width: 100%;\r\n  margin: auto;\r\n\r\n  @media (max-width: 500px) {\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { StyledButton, StyledButtonRed } from \"../Button/Button.styles\";\r\nimport { StyledButtonSection } from \"./ActionSection.styles\";\r\n\r\ninterface Props {\r\n  handleDeposit: () => void;\r\n  handleWithdraw: () => void;\r\n  bankruptMoney: () => void;\r\n  setErrors: React.Dispatch<React.SetStateAction<string[]>>;\r\n  bankInput: number;\r\n}\r\n\r\nexport const ActionSection = (props: Props) => {\r\n  return (\r\n    <StyledButtonSection>\r\n      <StyledButton\r\n        disabled={!props.bankInput}\r\n        onClick={() => {\r\n          props.handleDeposit();\r\n        }}\r\n      >\r\n        Deposit\r\n      </StyledButton>\r\n      <StyledButton\r\n        disabled={!props.bankInput}\r\n        onClick={() => {\r\n          props.handleWithdraw();\r\n        }}\r\n      >\r\n        Withdraw\r\n      </StyledButton>\r\n\r\n      <StyledButtonRed\r\n        onClick={() => {\r\n          props.bankruptMoney();\r\n          props.setErrors([]);\r\n        }}\r\n      >\r\n        Bankrupt\r\n      </StyledButtonRed>\r\n    </StyledButtonSection>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledHistoryList = styled.div`\r\n  box-sizing: border-box;\r\n  display: grid;\r\n  grid-template-columns: 1;\r\n  grid-row-gap: 10px;\r\n  width: 100%;\r\n  > div div {\r\n    border: 1px solid;\r\n    margin: 0 1em;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { State } from \"../../state\";\r\nimport { StyledHistoryList } from \"./HistoryList.styles\";\r\n\r\ninterface Props {}\r\n\r\nexport const HistoryList = (props: Props) => {\r\n  const history = useSelector((state: State) => state.history);\r\n  return (\r\n    <StyledHistoryList>\r\n      {history.length > 0 ? (\r\n        <div>\r\n          {history.map((item) => {\r\n            return (\r\n              <div key={item.id}>\r\n                <h2>\r\n                  {item.name}: {item.type}\r\n                </h2>\r\n                {item.amouth}\r\n                <p>{item.date}</p>\r\n                <p>balance after transaction: {item.accountBalance}</p>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      ) : (\r\n        <div>No history yet</div>\r\n      )}\r\n    </StyledHistoryList>\r\n  );\r\n};\r\n","import \"./App.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { actionCreators, State } from \"./state\";\nimport { useState } from \"react\";\nimport { ActionType } from \"./state/action-types\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { StyledSectionWrapper, StyledWrapper } from \"./components/App.styles\";\nimport { StyledInput } from \"./components/Input/Input.styles\";\nimport { ActionSection } from \"./components/ActionSection/ActionSection\";\nimport { HistoryList } from \"./components/History/HistoryList\";\n\nconst GlobalStyle = createGlobalStyle`\npadding: 0;\nmargin: 0;\nbox-sizing: border-box;\nbackground-color: #8A7356;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const [bankInput, setBankInput] = useState<number>(0);\n  const [personName, setPersonName] = useState<string>(\"\");\n  const [errors, setErrors] = useState<string[]>([]);\n\n  const { depositMoney, withdrawMoney, bankruptMoney, addToHistory } =\n    bindActionCreators(actionCreators, dispatch);\n  const amount = useSelector((state: State) => state.bank);\n\n  const addError = (err: string) => {\n    console.log(err);\n    if (errors.length > 0 && !errors.includes(err)) {\n      setErrors([...errors, err]);\n    } else {\n      setErrors([err]);\n    }\n  };\n\n  const checkForm = (action: string) => {\n    let errCount = 0;\n    if (action === ActionType.DEPOSIT && bankInput > 10000) {\n      addError(\"No joking, you can't have that much money!\");\n      errCount++;\n    }\n    if (action === ActionType.WITHDRAW && amount - bankInput < 0) {\n      addError(\"You can't withdraw money that you don't have!\");\n      errCount++;\n    }\n    if (personName.length === 0) {\n      addError(\"Enter a name\");\n      errCount++;\n    }\n    if (personName.length === 0) {\n      addError(\"Name is to short, at least 2 characters\");\n      errCount++;\n    }\n    if (bankInput === 0) {\n      addError(\"Value cant be 0\");\n      errCount++;\n    }\n\n    if (errCount) {\n      return false;\n    } else {\n      setErrors([]);\n      return true;\n    }\n  };\n\n  const getDate = () => {\n    const today = new Date();\n    const date =\n      today.getDate() +\n      \"-\" +\n      (today.getMonth() + 1) +\n      \"-\" +\n      today.getFullYear();\n    const time =\n      today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds();\n    const dateTime = date + \" \" + time;\n    return dateTime;\n  };\n\n  const handleAddHistory = (\n    historyAction: ActionType.DEPOSIT | ActionType.WITHDRAW\n  ) => {\n    const isDeposit = historyAction === ActionType.DEPOSIT ? true : false;\n    addToHistory({\n      id: \"123\",\n      type: isDeposit ? \"Deposit\" : \"Withdraw\",\n      name: personName,\n      amouth: isDeposit ? bankInput : -bankInput,\n      accountBalance: amount + (isDeposit ? bankInput : -bankInput),\n      date: getDate(),\n    });\n  };\n\n  const handleDeposit = () => {\n    if (checkForm(ActionType.DEPOSIT)) {\n      depositMoney(bankInput);\n      setBankInput(0);\n      handleAddHistory(ActionType.DEPOSIT);\n    }\n  };\n\n  const handleWithdraw = () => {\n    if (checkForm(ActionType.WITHDRAW)) {\n      withdrawMoney(bankInput);\n      setBankInput(0);\n      handleAddHistory(ActionType.WITHDRAW);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <StyledWrapper>\n        <GlobalStyle />\n\n        <StyledSectionWrapper>\n          <h1>{amount} $</h1>\n          {errors && (\n            <div>\n              {errors.map((err) => (\n                <p key={Math.floor(Math.random() * 1000)}>{err}</p>\n              ))}\n            </div>\n          )}\n          <ActionSection\n            handleDeposit={handleDeposit}\n            handleWithdraw={handleWithdraw}\n            bankInput={bankInput}\n            bankruptMoney={bankruptMoney}\n            setErrors={setErrors}\n          />\n\n          <StyledInput>\n            <input\n              type=\"number\"\n              value={bankInput}\n              onChange={(e) => setBankInput(Number(e.target.value))}\n              min=\"0\"\n            />\n            <span></span>\n          </StyledInput>\n          <StyledInput>\n            <input\n              type=\"text\"\n              value={personName}\n              onChange={(e) => setPersonName(e.target.value)}\n              placeholder=\"name...\"\n            />\n            <span></span>\n          </StyledInput>\n        </StyledSectionWrapper>\n        <StyledSectionWrapper>\n          <HistoryList />\n        </StyledSectionWrapper>\n      </StyledWrapper>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./state\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}